The ``say_my_name`` module
===============================

Using ``say_my_name`` module
-------------------------------

Import function from module:
    >>> say_my_name = __import__('3-say_my_name').say_my_name

Test basic functionality:
    >>> say_my_name("John", "Smith")
    My name is John Smith

Test with only first name:
    >>> say_my_name("Bob")
    My name is Bob 

Test data types:
    >>> say_my_name(12, "White") 
    Traceback (most recent call last):
        ...
    TypeError: first_name must be a string
    
    >>> say_my_name("Walter", 12)
    Traceback (most recent call last):
        ...
    TypeError: last_name must be a string

Test special characters:
    >>> say_my_name("John!", "@Smith")
    My name is John! @Smith
    
    >>> say_my_name("#John", "$Smith")
    My name is #John $Smith

Test None values:
    >>> say_my_name(None)
    Traceback (most recent call last):
        ...
    TypeError: first_name must be a string
    
    >>> say_my_name("John", None)
    Traceback (most recent call last):
        ...
    TypeError: last_name must be a string
    
    >>> say_my_name(None, None)
    Traceback (most recent call last):
        ...
    TypeError: first_name must be a string

Test numeric strings:
    >>> say_my_name("123", "456")
    My name is 123 456
    
    >>> say_my_name("-123", "+456")
    My name is -123 +456

Test name lengths:    
    >>> say_my_name("A", "B"*1000)
    My name is A BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB

Test whitespace:
    >>> say_my_name("   John   ", "   Smith   ")
    My name is    John       Smith   
    
Test argument validation:
    >>> say_my_name()
    Traceback (most recent call last):
        ...
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'

Test international characters:
    >>> say_my_name("José", "García")
    My name is José García
    
    >>> say_my_name("üñîçødé", "têst")
    My name is üñîçødé têst
    
    >>> say_my_name("汉字", "测试")
    My name is 汉字 测试

Test with bool values:
    >>> say_my_name(True, False)
    Traceback (most recent call last):
        ...
    TypeError: first_name must be a string

Test with list/dict/tuple:
    >>> say_my_name([], {})
    Traceback (most recent call last):
        ...
    TypeError: first_name must be a string
    
    >>> say_my_name(["John"], ("Smith",))
    Traceback (most recent call last):
        ...
    TypeError: first_name must be a string

Assign first_name and last_name correctly:
    >>> say_my_name("Betty", "Holberton")
    My name is Betty Holberton

Passing first_name and last_name correctly 2:
    >>> say_my_name("Luis")
    My name is Luis 

Passing None as the last_name:
    >>> say_my_name("John", None)
    Traceback (most recent call last):
        ...
    TypeError: last_name must be a string

Passing None as the first_name:
    >>> say_my_name(None)
    Traceback (most recent call last):
        ...
    TypeError: first_name must be a string

Passing a number as the first_name:
    >>> say_my_name(1)
    Traceback (most recent call last):
        ...
    TypeError: first_name must be a string

Passing a number as the last_name:
    >>> say_my_name("Betty", 0)
    Traceback (most recent call last):
        ...
    TypeError: last_name must be a string

Missing two arguments:
    >>> say_my_name()
    Traceback (most recent call last):
        ...
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'